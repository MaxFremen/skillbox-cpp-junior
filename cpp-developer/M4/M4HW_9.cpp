/*

##### Задание 9. Прогрессивный налог (дополнительное задание)
###### Что нужно сделать
В последнем видео мы писали программу, вычисляющую сумму налога по прогрессивной шкале в зависимости от полученного заработка: 13% — на доход до 10 000, 20% — на доход от 10 000 до 50 000, 30% — на доход выше 50 000.

Однако во многих странах, использующих такую шкалу, эта сумма вычисляется более сложным способом: налоговая ставка 30% на доход выше 50 000 означает, что 30% уплачивается не со всей суммы, а лишь с той её части, которая превосходит 50 000. Аналогично: ставка 20% на доход от 10 000 до 50 000 обязывает уплатить 20% лишь с той части суммы, которая превосходит 10 000, но не превосходит 50 000.

Так, например, с дохода 100 000 придётся заплатить такой налог: 30% * (100 000 – 50 000) + 20% * (50 000 – 10 000) + 13% * 10 000 = 15 000 + 8000 + 1300 = 24 300.

С дохода 30 000: 20% * (30 000 – 10 000) + 13% * 10 000 = 4000 + 1300 = 5300.

Напишите программу, которая спрашивает у пользователя его доход и рассчитывает сумму налога для него по вышеописанным правилам.

###### Советы и рекомендации
Обработка некорректного ввода приветствуется.
Чтобы сократить количество проверок, используйте оператор else if.
###### Что оценивается
Правильное определение налога.
Отсутствие лишних и дублирующих проверок.

*/

#include <iostream>
#include <map>
// #include <limits>

using namespace std;

int main() {
    cout << "Налоговый калькулятор. Прогрессивная шкала налогообложения.\n";
    cout << "-----------------------------------------------------------\n";

    /* Пока что опускаю руки с обработкой пользовательского ввода. Судя по всему,
    cin просто выплёвывает всё что влезло в тип переменной, остальное обрезает.
    Это прямо боль какая-то. Качественно обработать ничерта не получислось.*/
    // TODO: Изучать типы данных.
    // TODO: Читать про потоки.
    // unsigned int userIncome;
    // while (true) {
    //     cout << "Введите ваш доход: ";
    //     // Проверка на успешность извлечения данных из потока
    //     if (cin >> userIncome) {
    //         // Данные извлечены успешно (нифига не работает)
    //         break;
    //     } else {
    //         // Данные извлечены не успешно (пользователь ввел текст)
    //         cout << "Пожалуйста, введите положительное число.\n";
    //         cin.clear();  // Сброс состояния ошибки
    //         cin.ignore(numeric_limits<streamsize>::max(), '\n');  // Плохо понял что тут происходит. Типа - очистить поток от всего до EOF?
    //     }
    // };

    // Размер дохода Пользователя (целый положительный)
    int userIncome;
    cout << "Введите ваш доход: ";
    cin >> userIncome;
    while (userIncome < 0) {
        cout << "Доход не может быть отрицательным.\n";
        cout << "Введите ваш доход: ";
        cin >> userIncome;
    };

    /* Попробовал словарь. Но в переменных во время дебага он выглядит как-то жутко.
    У меня всего три пары, а там массив из пятисот элементов. Я не понял, почему так. */

    // Градации дохода
    map <int, int> taxRates = {
        {0, 13},
        {10000, 20},
        {50000, 30}
    };
    // Итоговая сумма налога
    float taxAmount;
    // Остаток дохода за вычетом лимита налогооблагаемой части
    int incomeRemainder;
    cout << "Компоненты вашего налога:\n";
    cout << "-------------------------\n";
    for (int taxedAmount: {50000, 10000, 0}) {
       // Остаток облагаемого дохода за вычетом лимита
       incomeRemainder = userIncome - taxedAmount;
       if (incomeRemainder > 0) {
            // Сумма налога для текущего диапазона лимитов
            float stepTaxAmount = incomeRemainder * taxRates[taxedAmount] / 100;
            taxAmount += stepTaxAmount;
            userIncome = taxedAmount;
            // Вывод информации о компоненте налога
            cout << incomeRemainder << " x [" << taxRates[taxedAmount] << "%] = " << stepTaxAmount << "\n";
       };
    };
    cout << "-------------------------\n";
    cout << "ВСЕГО: " << taxAmount;
    return 0;
}