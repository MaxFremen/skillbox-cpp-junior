/*
# Задача 1. Симулятор маршрутки

## Что нужно сделать

Напишите программу, которая симулирует работу маршрутки. Она умеет объявлять остановки и узнавать у пользователя, сколько человек вышло и зашло на остановке. Пассажиры оплачивают проезд при входе. Работать она должна примерно так:

Прибываем на остановку «Улица программистов». В салоне пассажиров: 0
Сколько пассажиров вышло на остановке? 0
Сколько пассажиров зашло на остановке? 3
Отправляемся с остановки «Улица программистов». В салоне пассажиров: 3
-----------Едем---------
Прибываем на остановку «Проспект алгоритмов». В салоне пассажиров: 3
…
…

Маршрут состоит из четырёх остановок. Напишите программу так, чтобы в конце она выводила, сколько денег мы заработали при условии, что билет стоит 20 руб., а расходы следующие:

четверть — на зарплату водителю;
пятая часть — на топливо;
пятая часть — на налоги;
пятая часть — на ремонт машины.
Формат вывода (после прибытия на последнюю остановку):

Всего заработали: 100 руб.
Зарплата водителя: 25 руб.
Расходы на топливо: 20 руб.
Налоги: 20 руб.
Расходы на ремонт машины: 20 руб.
Итого доход: 15 руб.

Рекомендации по выполнению
В одной программе должен быть как ввод количества вошедших и вышедших пассажиров, так и расчёты доходов и расходов.
Стоит вынести названия остановок в переменные.
Постарайтесь написать программу так, чтобы в неё без особых изменений можно было добавить ещё несколько остановок.
Что оценивается
Правильность подсчёта текущего количества пассажиров.
Правильность подсчёта доходов и расходов.
Отсутствие лишних переменных.
*/

# include <iostream>
# include <vector>
# include <string>

using namespace std;

int main() {

    cout << "Сильно интеллектуальный GPT-5 помощник водителя маршрутки 2.0" << endl;
    cout << "-------------------------------------------------------------" << endl;
    // Список остановок
    vector<string> stops = {
        "Улица программистов",
        "Проспект алгоритмов",
        "Площадь переменных",
        "Бульвар функций"
        // Добавить еще остановки можно тут
    };

    vector<string> driver_reactions = {
        "Ну вот только не надо хлопать дверью!",
        "Опять эти пробки...",
        "Кто-то забыл оплатить проезд?",
        "Пожалуйста, держитесь за поручни!"
    };

    const int ticket_price = 20; // Цена билета
    int total_passengers = 0;    // Общее количество пассажиров
    int capacity = 20;          // Вместимость маршрутки
    int total_earnings = 0;      // Общий заработок

    for (const string& stop : stops) {
        cout << "Прибываем на остановку \"" << stop << "\". В салоне пассажиров: " << total_passengers << endl;

        int exited;  // Количество вышедших пассажиров
        int entered;  // Количество вошедших пассажиров

        if (total_passengers == 0) {
            cout << "В салоне нет пассажиров, никто не может выйти." << endl;
            exited = 0;
        } else {
            exited = -1;
            while (exited < 0 || exited > total_passengers) {
                cout << "Сколько пассажиров вышло на остановке? ";
                cin >> exited;
            }
            total_passengers -= exited;
        }

        if (total_passengers >= capacity) {
            cout << "Маршрутка полная! Стоя никого не беру." << endl; 
            entered = 0;  // Никто не может войти
        } else {
            int free_seats = capacity - total_passengers;
            entered = -1;
            while(entered < 0 || entered > free_seats) {
                cout << "Сколько пассажиров зашло на остановке? ";
                cin >> entered;
            }
            total_passengers += entered;
        }

        if (true) {
            cout << driver_reactions[rand() % driver_reactions.size()] << endl;
        }

        total_earnings += entered * ticket_price;

        cout << "Отправляемся с остановки \"" << stop << "\". В салоне пассажиров: " << total_passengers << endl;
        cout << "----------------------------- Едем... -----------------------" << endl;
    }

    cout << "Конечная остановка. Маршрутка дальше не идёт. Просим вас выйти." << endl;
    cout << endl;
    cout << "Всего заработали: " << total_earnings << " руб." << endl;

    float driver_salary = total_earnings / 4.0; // Зарплата водителя
    float fuel_cost = total_earnings / 5.0;     // Расход
    float taxes = total_earnings / 5.0;         // Налоги
    float repair_cost = total_earnings / 5.0;   // Ремонт машины
    float total_expenses = driver_salary + fuel_cost + taxes + repair_cost; // Общие расходы
    float net_income = total_earnings - total_expenses; // Чистый доход

    cout << "Зарплата водителя: " << driver_salary << " руб." << endl;
    cout << "Расходы на топливо: " << fuel_cost << " руб." << endl;
    cout << "Налоги: " << taxes << " руб." << endl;
    cout << "Расходы на ремонт машины: " << repair_cost << " руб." << endl;
    cout << "-----------------------------------------------------------------" << endl;
    cout << "ИТОГО ДОХОД: " << net_income << " руб." << endl;
    return 0;

}